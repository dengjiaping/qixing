// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
//        classpath 'com.github.kt3k.coveralls'

        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        classpath 'org.codehaus.groovy:groovy-backports-compat23:2.3.5'
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
    ext {
        POM_NAME = 'Shortcutbadger'
        POM_DESCRIPTION = 'The ShortcutBadger makes your Android App show the count of unread messages as a badge on your App shortcut!'
        POM_URL = 'https://github.com/leolin310148/ShortcutBadger'
        POM_SCM_URL = 'https://github.com/leolin310148/ShortcutBadger'
        POM_SCM_CONNECTION = 'https://github.com/leolin310148/ShortcutBadger.git'
        POM_SCM_DEV_CONNECTION = 'https://github.com/leolin310148/ShortcutBadger.git'
        POM_LICENCE_NAME = 'The Apache Software License, Version 2.0'
        POM_LICENCE_URL = 'http://www.apache.org/licenses/LICENSE-2.0'
        POM_LICENCE_DIST = 'repo'
        POM_DEVELOPER_ID = 'leolin310148'
        POM_DEVELOPER_NAME = 'Leo Lin'
        POM_PACKAGING = 'aar'
        POM_ARTIFACT_ID = 'shortcutbadger'
        VERSION_NAME = '1.1.8'
        VERSION_CODE = 1
        GROUP = 'me.leolin'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

subprojects { project ->
    repositories {
        jcenter()
        mavenCentral()
//        maven {
//            url "https://oss.sonatype.org/content/repositories/snapshots"
//        }


    }
    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:2.1.2'
        }
    }

    apply plugin: 'checkstyle'

    checkstyle {
        toolVersion = '6.12.1'
    }

    checkstyle {
        configFile rootProject.file('checkstyle.xml')
        configProperties.checkStyleConfigDir = rootProject.rootDir
    }

    task checkstyle(type: Checkstyle) {
        source 'src'
        include '**/*.java'
        exclude '**/gen/**'

        // empty classpath
        classpath = files()
    }

    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
        }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
        }
    }

//    android {
//        lintOptions {
//            abortOnError true
//            xmlReport false
//            htmlReport true
////        lintConfig file("${project.rootDir}/config/quality/lint/lint.xml")
////        htmlOutput file("$project.buildDir/reports/lint/lint-result.html")
////        xmlOutput file("$project.buildDir/reports/lint/lint-result.xml")
//        }
//    }


}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    minSdkVersion = 15
    compileSdkVersion = 24
    buildToolsVersion = '24.0.2'

    targetSdkVersion = 24

    androidSupportVersion = '24.0.2'

//    gradle
    androidGradleVersion = '2.1.2'
}